const e=document,t=localStorage,i="prefers-color-scheme",a="media",s="light",r="dark",o=`(${i}:${r})`,n=`(${i}:${s})`,l="link[rel=stylesheet]",h="remember",c="legend",d="toggle",p="switch",b="appearance",g="permanent",m="mode",u="colorschemechange",f="permanentcolorscheme",k="all",v="not all",$="dark-mode-toggle",L="https://googlechromelabs.github.io/dark-mode-toggle/demo/",y=(e,t,i=t)=>{Object.defineProperty(e,i,{enumerable:!0,get(){const e=this.getAttribute(t);return null===e?"":e},set(e){this.setAttribute(t,e)}})},x=(e,t,i=t)=>{Object.defineProperty(e,i,{enumerable:!0,get(){return this.hasAttribute(t)},set(e){e?this.setAttribute(t,""):this.removeAttribute(t)}})},w=e.createElement("template");w.innerHTML=`<style>*,::after,::before{box-sizing:border-box}:host{contain:content;display:block}:host([hidden]){display:none}form{background-color:var(--${$}-background-color,transparent);color:var(--${$}-color,inherit);padding:0}fieldset{border:none;margin:0;padding-block:.25rem;padding-inline:.25rem}legend{font:var(--${$}-legend-font,inherit);padding:0}input,label{cursor:pointer}label{padding:.15rem;white-space:nowrap}input{opacity:0;position:absolute;pointer-events:none}input:focus+label{outline:#e59700 auto 2px;outline:-webkit-focus-ring-color auto 5px}label::before{content:"";display:inline-block;background-size:var(--${$}-icon-size,1rem);background-repeat:no-repeat;height:var(--${$}-icon-size,1rem);width:var(--${$}-icon-size,1rem);vertical-align:middle;margin-inline-end:.5rem}[part=lightLabel]::before{background-image:var(--${$}-light-icon, url("${L}sun.png"))}[part=darkLabel]::before{filter:var(--${$}-icon-filter, none);background-image:var(--${$}-dark-icon, url("${L}moon.png"))}[part=toggleLabel]::before{background-image:var(--${$}-checkbox-icon,none)}[part=permanentLabel]::before{background-image:var(--${$}-remember-icon-unchecked, url("${L}unchecked.svg"))}[part=darkLabel],[part=lightLabel],[part=toggleLabel]{font:var(--${$}-label-font,inherit)}[part=darkLabel]:empty,[part=lightLabel]:empty,[part=toggleLabel]:empty{font-size:0;padding:0}[part=permanentLabel]{font:var(--${$}-remember-font,inherit)}input:checked+[part=permanentLabel]::before{background-image:var(--${$}-remember-icon-checked, url("${L}checked.svg"))}input:checked+[part=darkLabel],input:checked+[part=lightLabel]{background-color:var(--${$}-active-mode-background-color,transparent)}input:checked+[part=darkLabel]::before,input:checked+[part=lightLabel]::before{background-color:var(--${$}-active-mode-background-color,transparent)}input:checked+[part=toggleLabel]::before{filter:var(--${$}-icon-filter, none)}input:checked+[part=toggleLabel]+aside [part=permanentLabel]::before{filter:var(--${$}-remember-filter, invert(100%))}aside{visibility:hidden;margin-block-start:.15rem}[part=darkLabel]:focus-visible~aside,[part=lightLabel]:focus-visible~aside,[part=toggleLabel]:focus-visible~aside{visibility:visible;transition:visibility 0s}aside [part=permanentLabel]:empty{display:none}@media (hover:hover){aside{transition:visibility 3s}aside:hover{visibility:visible}[part=darkLabel]:hover~aside,[part=lightLabel]:hover~aside,[part=toggleLabel]:hover~aside{visibility:visible;transition:visibility 0s}}</style><form part=form><fieldset part=fieldset><legend part=legend></legend><input part=lightRadio id=l name=mode type=radio><label part=lightLabel for=l></label><input part=darkRadio id=d name=mode type=radio><label part=darkLabel for=d></label><input part=toggleCheckbox id=t type=checkbox><label part=toggleLabel for=t></label><aside part=aside><input part=permanentCheckbox id=p type=checkbox><label part=permanentLabel for=p></label></aside></fieldset></form>`;export class DarkModeToggle extends HTMLElement{static get observedAttributes(){return[m,b,g,c,s,r,h]}constructor(){super(),y(this,m),y(this,b),y(this,c),y(this,s),y(this,r),y(this,h),x(this,g),this.t=null,this.i=null,e.addEventListener(u,e=>{this.mode=e.detail.colorScheme,this.s(),this.o()}),e.addEventListener(f,e=>{this.permanent=e.detail.permanent,this.l.checked=this.permanent}),this.h()}h(){const h=this.attachShadow({mode:"open"});h.appendChild(w.content.cloneNode(!0)),this.t=e.querySelectorAll(`${l}[${a}*=${i}][${a}*="${r}"]`),this.i=e.querySelectorAll(`${l}[${a}*=${i}][${a}*="${s}"]`),this.p=h.querySelector("[part=lightRadio]"),this.g=h.querySelector("[part=lightLabel]"),this.m=h.querySelector("[part=darkRadio]"),this.u=h.querySelector("[part=darkLabel]"),this.k=h.querySelector("[part=toggleCheckbox]"),this.v=h.querySelector("[part=toggleLabel]"),this.$=h.querySelector("legend"),this.L=h.querySelector("aside"),this.l=h.querySelector("[part=permanentCheckbox]"),this.M=h.querySelector("[part=permanentLabel]");const c=matchMedia(o).media!==v;c&&matchMedia(o).addListener(({matches:e})=>{this.mode=e?r:s,this.C(u,{colorScheme:this.mode})});const m=t.getItem($);m&&[r,s].includes(m)?(this.mode=m,this.l.checked=!0,this.permanent=!0):c&&(this.mode=matchMedia(n).matches?s:r),this.mode||(this.mode=s),this.permanent&&!m&&t.setItem($,this.mode),this.appearance||(this.appearance=d),this.R(),this.s(),this.o(),[this.p,this.m].forEach(e=>{e.addEventListener("change",()=>{this.mode=this.p.checked?s:r,this.o(),this.C(u,{colorScheme:this.mode})})}),this.k.addEventListener("change",()=>{this.mode=this.k.checked?r:s,this.s(),this.C(u,{colorScheme:this.mode})}),this.l.addEventListener("change",()=>{this.permanent=this.l.checked,this.C(f,{permanent:this.permanent})}),this._(),this.C(u,{colorScheme:this.mode}),this.C(f,{permanent:this.permanent})}attributeChangedCallback(e,i,a){if(e===m){if(![s,r].includes(a))throw new RangeError(`Allowed values: "${s}" and "${r}".`);matchMedia("(hover:none)").matches&&this.remember&&this.A(),this.permanent&&t.setItem($,this.mode),this.s(),this.o(),this._()}else if(e===b){if(![d,p].includes(a))throw new RangeError(`Allowed values: "${d}" and "${p}".`);this.R()}else e===g?(this.permanent?t.setItem($,this.mode):t.removeItem($),this.l.checked=this.permanent):e===c?this.$.textContent=a:e===h?this.M.textContent=a:e===s?(this.g.textContent=a,this.mode===s&&(this.v.textContent=a)):e===r&&(this.u.textContent=a,this.mode===r&&(this.v.textContent=a))}C(e,t){this.dispatchEvent(new CustomEvent(e,{bubbles:!0,composed:!0,detail:t}))}R(){const e=this.appearance===d;this.p.hidden=e,this.g.hidden=e,this.m.hidden=e,this.u.hidden=e,this.k.hidden=!e,this.v.hidden=!e}s(){this.mode===s?this.p.checked=!0:this.m.checked=!0}o(){this.mode===s?(this.v.style.setProperty(`--${$}-checkbox-icon`,`var(--${$}-light-icon,url("${L}moon.png"))`),this.v.textContent=this.light,this.k.checked=!1):(this.v.style.setProperty(`--${$}-checkbox-icon`,`var(--${$}-dark-icon,url("${L}sun.png"))`),this.v.textContent=this.dark,this.k.checked=!0)}_(){this.mode===s?(this.i.forEach(e=>{e.media=k,e.disabled=!1}),this.t.forEach(e=>{e.media=v,e.disabled=!0})):(this.t.forEach(e=>{e.media=k,e.disabled=!1}),this.i.forEach(e=>{e.media=v,e.disabled=!0}))}A(){this.L.style.visibility="visible",setTimeout(()=>{this.L.style.visibility="hidden"},3e3)}};customElements.define($,DarkModeToggle);"use strict";const toggle=document.querySelector("dark-mode-toggle"),body=document.body;let trans=()=>{document.documentElement.classList.add("transition"),window.setTimeout(()=>{document.documentElement.classList.remove("transition")},1e3)},switchMode=e=>{let t=document.querySelectorAll("i[class^='p-icon--']:not([data-toggle-behavior='invariant'])");for(let i of Array.from(t))e?i.classList.add("is-light"):i.classList.remove("is-light")},darkMode=e=>{e&&trans(),switchMode(!0),document.documentElement.setAttribute("data-theme","dark")},lightMode=e=>{e&&trans(),switchMode(!1),document.documentElement.setAttribute("data-theme","light")},isStorageAvailable=()=>{try{let e="__storage_test__";return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch(e){return!1}};isStorageAvailable()?("dark"===toggle.mode?darkMode(!1):lightMode(!1),toggle.addEventListener("colorschemechange",()=>{"dark"===toggle.mode?darkMode(!0):lightMode(!0)})):toggle.remove();